
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
import os

from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Frame

ASSETS_PATH = os.path.dirname(__file__) + "/assets"


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


class Buildings_Frame(Frame):

    def __init__(self, parent, window):
        self.parent = parent
        self.window = window

    def create_elements(self):
        self.elements = {}
        self.create_canvas()
        self.create_header()
        self.create_body()
        self.create_footer()

    def create_canvas(self):
        self.elements["canvas"] = Canvas(
            self.window,
            bg = "#FFFFFF",
            height = 671,
            width = 698,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        self.elements["canvas"].place(x = 0, y = 0)

    def create_header_background(self):
        self.header_background_image = PhotoImage(file=relative_to_assets("commons/header_background.png"))

        self.elements["header_background"] = self.elements["canvas"].create_image(349.0, 144.0, image=self.header_background_image)
    
    def create_title(self):
        self.elements["canvas"].create_text(
            276.0,
            67.0,
            anchor="nw",
            text="Buildings",
            fill="#2F0F73",
            font=("Irish Grover", 64 * -1)
        )

    def create_header(self):
        self.create_header_background()
        self.create_title()

    def create_body(self):
        self.create_converter_button()
        self.create_needed_glory_calculator_button()

    def create_footer(self):
        self.create_small_back_button()
        self.create_small_quit_button()
        self.create_trademark()

    def create_converter_button(self):
        self.converter_button_image = PhotoImage(
            file=relative_to_assets("frame1/converter_button.png"))
        self.elements["converter_button"] = Button(
            image=self.converter_button_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.parent.switch_frame("Converter_Frame"),
            relief="flat"
        )
        self.elements["converter_button"].place(
            x=179.0,
            y=335.0,
            width=340.0,
            height=44.0
        )

    def create_needed_glory_calculator_button(self):
        self.needed_glory_calculator_image = PhotoImage(
            file=relative_to_assets("frame1/needed_glory_calculator.png"))
        self.elements["needed_glory_calculator_button"] = Button(
            image=self.needed_glory_calculator_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("needed_glory_calculator_button clicked"),
            relief="flat"
        )
        self.elements["needed_glory_calculator_button"].place(
            x=179.0,
            y=397.0,
            width=340.0,
            height=44.0
        )

    def create_trademark(self):
        self.elements["canvas"].create_text(
            12.0,
            638.0,
            anchor="nw",
            text="Developed by Quentin Norbert",
            fill="#000000",
            font=("Inter", 20 * -1)
        )

    def create_small_back_button(self):
        self.small_back_button_image = PhotoImage(
            file=relative_to_assets("commons/small_back_button.png"))
        self.elements["small_back_button"] = Button(
            image=self.small_back_button_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.parent.switch_frame("Main_Frame"),
            relief="flat"
        )
        self.elements["small_back_button"].place(
            x=15.0,
            y=583.0,
            width=95.0,
            height=41.0
        )

    def create_small_quit_button(self):
        self.small_quit_button_image = PhotoImage(
            file=relative_to_assets("commons/small_quit_button.png"))
        self.elements["small_quit_button"] = Button(
            image=self.small_quit_button_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.window.destroy(),
            relief="flat"
        )
        self.elements["small_quit_button"].place(
            x=585.0,
            y=583.0,
            width=95.0,
            height=41.0
        )

    def destroy(self):
        [element.place_forget() for element in self.elements]
